name: Publish Packages

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-**'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # for tags
          ref: ci/NO-TICKET-upgrade-nx-to-20.4

      - name: Ensure tag is on main branch
        run: |
          TAG_COMMIT=$(git rev-parse ${{ github.ref }})
          git fetch origin main
          if ! git merge-base --is-ancestor $TAG_COMMIT origin/main; then
            echo "Tag is not on main branch. Skipping publish."
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm install

      - name: Bump version (core & react)
        id: bump
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          node scripts/bump-version.js "$TAG_NAME" > version.txt
          NEW_VERSION=$(cat version.txt)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Build core
        run: |
          rm -rf .nx
          export NX_DAEMON=false
          npm run build:core

      - name: Build react
        run: |
          rm -rf .nx
          export NX_DAEMON=false
          npm run build:react

      - name: Commit and tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add packages/core/package.json packages/react/package.json
          git commit -m "chore(release): v${{ steps.bump.outputs.new_version }}"
          git push origin ci/NO-TICKET-upgrade-nx-to-20.4

      - name: Release core
        run: npm run release:core --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Release react
        run: npm run release:react --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
